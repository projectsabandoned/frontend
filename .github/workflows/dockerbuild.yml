name: dockerbuild
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'
  
permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    permissions:
      contents: read
      security-events: write
      actions: read
      checks: write
    runs-on: ubuntu-latest
    env:
      crName: "furlangiacomo"

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Analyze with SonarCloud         
      uses: SonarSource/sonarcloud-github-action@156db6fef3e168e4972abb76de0b32bbce8ec77a
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args:             
          -Dsonar.projectKey=g14com0_frontend
          -Dsonar.organization=g14com0

    #https://github.com/docker/login-action
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Calculate tag
      run: |
        branchName="$(git rev-parse --abbrev-ref HEAD)"
        commitId="$(git rev-parse --short HEAD)"
        repoName="$(basename `git rev-parse --show-toplevel`)"
        if [[ ${branchName} == main ]] ; then
          prefix=M
        else
          prefix=F-$(echo $branchName | cut -f 2 -d/)
        fi
        tag="$repoName:$prefix-$(date '+%Y%m%d')-$commitId"
        echo "TAG=$(echo $tag)" >> $GITHUB_ENV
    - name: Build
      run: docker build . -t ${{ env.crName }}/${{ env.TAG}}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@d63413b0a4a4482237085319f7f4a1ce99a8f2ac
      with:
        image-ref: '${{ env.crName }}/${{ env.TAG}}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@f17622b4d086f0789070d28f1f06253090ae8fa6
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ env.crName }}/${{ env.TAG}}
        args: --file=Dockerfile

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    - name: Sysdig Secure Inline Scan
      id: scan
      uses: sysdiglabs/scan-action@0e483c3a8ed88a6d7394a1baaf0e432db09f240f
      with:
        image-tag: ${{ env.crName }}/${{ env.TAG}}
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN}}
        sysdig-secure-url: https://eu1.app.sysdig.com 
        dockerfile-path: ./Dockerfile
        input-type: docker-daemon
        ignore-failed-scan: true
        run-as-user: root

    - uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}

    - name: Push
      if: ${{ github.event_name != 'schedule' }}
      run: docker push ${{ env.crName }}/${{ env.TAG}}